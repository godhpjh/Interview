1. WCC ??
서론
2014년에 교내에서 공모전 포스터를 보고 다른과 학생들과 함께 참가한 교외 프로젝트입니다. 
당시 주제가 스마트한 의상에 관한 것이었기 때문에 의상에 중점을 두어 아이디어를 생각했고 프레젠테이션 발표복이란 키워드로 시작하였습니다.

본론
프레젠테이션 발표에 필요한 모션기능과 소프트웨어적 기능을~  ‘의류와 함께’ 융합한 프로젝트입니다. 프레젠테이션의 효과를 극대화할 수 있는 NUI 기술 기반의 프레젠테이션 전용 의상을 만들었습니다. 의상 속에 센서를 부착하여 손동작 제스쳐를 통해 소프트웨어 기능을 포함하고 있고 스마트폰과 연동하여 녹음기능을 통해 버릇감지 시스템을 만들었습니다. 버릇이 감지되면 의상 뒤에 부착된 진동센서를 통해 전달할 수 있도록 하였고 발표를 할 때 이목을 집중시킬 수 있도록 LED를 부착하였습니다.

● NUI(Natural User Interface) :　사용자의 자연스러운 움직임을 인식하여　3D 모션 인식과 같은 자기 신체를 활용하는 기술.

1-1 본인이 개발한 부분에 대해서 설명해 주세요.
SW/HW/의상 팀으로 나누어 작업을 진행했고 기능모션에 필요한 센서부분을 맡아 개발하였습니다. 먼저, 3축 자이로센서 값(roll,pitch,yaw)들을 분석하여 모션인식 기능들을 개발을 하였습니다. 필요한 모션이 무엇인지 생각을 하면서 모션을 정하고 해당 모션을 취했을 때 변화량을 측정하여 변화에 따른 모션 기능들입니다. 대표적으로 페이지 넘기기, 강조, 확대기능들이 있습니다. 그리고, 자이로센서의 값들을 통해 3차원의 x,y,z축과 비슷하다는 점을 이용하여 손동작 모션으로 마우스의 기능을 사용할 수 있게 마우스 기능을 탑재하였습니다. 

1-2 프로젝트를 진행하면서 어려웠던 점은 무엇이었나요?
WCC 특성상 개발적인 요소뿐만 아니라 퍼포먼스 쇼를 보여 줄 수 있는 부분이 필요하였습니다. 직접 대전 KAIST에 방문하여 사전설명회를 듣고 전반적인 이해를 할 수 있었습니다. 또한, 관련 조교 분들과 상담하여 구체적인 조언을 통해 어려움에 대해 극복해 나갈 수 있었습니다.

1-3 프로젝트를 마치고 느낀점이 있나요??
9개월의 장기 프로젝트였고 매 주마다 학기 중에 수업을 마치고 틈틈이 만나서 작업하였습니다. 서로 지치고 힘든 시간이었지만 소통하며 배우는 시간이었고 서로간의 갈등이 있을 때 이해하며 노력하고 양보하는 마음의 자세를 배웠다고 할 수 있습니다. 책임감을 갖고 최선을 다하고 맡은 바 임무를 포기하지 않고 끝까지 하는 근성과 끈기를 다시 한 번 느낄 수 있었습니다.
Q. 소스코드를 줄 수 있나?
지금은 모든 재산권이나 소유권은 대전 KAIST에 있기 때문에 소스코드에 대해서는 제출하기 힘들 것 같습니다. 증명할 만한 자료는 상장과 홈페이지에 게시된 증거물을 제출가능.
2. Spring 웹프로젝트?
서론
외국인 방문객을 위한 C2C방식의 가이드 매칭 플랫폼으로서 MVC 패턴 기반 국내여행 사이트를 제작하였습니다. 기존 Spring과 다르게 Controller를 직접 구현하여 작동하는 방식으로 MVC구조 파악을 겸한 프로젝트라 할 수 있습니다. 

● Controller 구조 (DispatcherServlet 역할)
- 클라이언트에서 URL을 통해 정보를 요청하면 DispatcherServlet에서 해당 컨트롤러가 있는지 HandlerMapping을 통해 검색합니다. 컨트롤러에서 보내온 View이름을 토대로 ViewResolver를 통해 검색하고 난 후 최종결과를 반환하는 구조입니다. 

● 프로젝트에 약점이 있다면??
웹 프로젝트 개념 차원에서 만든 사이트이기 때문에 기타 제약사항에 큰 의의를 두지 않고 제작하였습니다. 예를 들어, 가이드 하는 사람의 신용도관리 라던가 인증절차와 같은 세부적인 요소를 고려하지 않고 서로 간에 요청되는 서비스에 대해 중점을 두고 만든 것입니다.

자소서
[Web개발에 진정한 꿈을 갖게 되다.]
15.12~16.06 약 6개월 간 Framework 기반 웹 개발과정을 수료하게 되면서 Spring을 이용하여 웹 사이트를 개발한 경험이 있습니다. 외국인 방문객을 위한 C2C방식의 가이드 매칭 플랫폼으로서 MVC 패턴 기반 국내여행 사이트를 목표로 DB설계부터 JavaScript, jQuery, myBatis 등 여러 기술을 다루며 팀원들과 함께 프로젝트 분산 관리 서비스인 깃허브를 사용하면서 개발을 완료하였습니다. 뿐만 아니라 기존 Spring과는 다르게 Controller를 직접 구현하여 MVC패턴 분석을 겸한 프로젝트였기에 더욱 자신감을 갖고 있습니다. 
여러 번의 DB수정과 깃허브의 프로젝트 업데이트 실수로 프로젝트가 뒤덮이는 좌절감이 있었지만 한 번더 공부한다는 생각으로 다시 작업을 진행하여 마무리하였습니다. 프로젝트를 완성했다는 것에 대한 만족을 떠나서 서로 소통하고 역할분담을 나누어 책임감을 가지고 밤을 지새울 정도로 열심히 노력했다는 것에 큰 성공을 했다고 생각합니다. 또한, 웹 페이지인 만큼 만들 때에도 고객의 입장에서 생각하고 보다 편리한 기능을 제공하고 싶은 개발자의 정신으로 최선을 다했다는 것도 인상이 깊었습니다.  










3. 빅데이터??
하둡의 구성요소
- NameNode
- DataNode
- Secondary NameNode
- JobTracker( Task 스케줄링, 시스템 전체 수행을 조절.)
- TaskTracker
교육과정 중 빅데이터에 관해 자세히 배우지 못했다
하둡설치 와 구조

기존 웹 사이트를 구축하게 되면서 빅데이터 요소적인 측면을 추가한 프로젝트입니다.
영화사이트를 만들면서 단순한 사이트 아닌 빅데이터 요소를 추가하였습니다.
먼저, 영화를 검색할 때 자신이 원하는 감정적인 요소를 빅데이터화 하였습니다.
네이버나 다음과 같은 해당 영화에 대한 댓글들을 먼저 API를 이용해 데이터를 수집하고 수집한 데이터들을 MongoDB에 저장하였습니다. 그리고
행복,스릴,무서움 등과 같은 감정적인 요소들을 찾아 맵리듀스를 통해 분석하고 
이것에 대한 시각화를 위해 워드클라우드를 만들거나 R을 이용해 데이터의 그래프(파이그래프, 막대그래프 등)를 보여주었습니다.

비정형 데이터를 처리해야 하기 때문에 MongoDB를 이용하여 NoSQL을 사용해서 서버작업을 진행하였습니다. 데이터 시각화를 위해 R을 사용하였고 R을 이용해 사람들의 추이,성향 등을 표현하였습니다. 



맵리듀스(MapReduce)
처리해야 하는 빅데이터를 분산파일시스템에 저장한 후 각각에 대해 병렬처리하고
결과를 마지막에 하나로 통합하는 것.












4. 신호등 관련 프로젝트에 대해 설명해주세요.
서론
대학교 4학년 때 OpenCV를 공부하게 되면서 관심을 갖게 되어 영상처리 Lab실에 들어갔습니다. 연구과제로 차량용 블랙박스 영상을 이용하여 주행 중 교통신호를 자동으로 인식하는 시스템 개발을 하는 것이었습니다.
 
본론
크게 안드로이드/영상미디어/신호등검출 팀으로 나뉘었고 그 중에서 OpenCV를 이용해 신호등을 검출하는 개발을 맡았습니다. 주야간 샘플 사진 80여장을 바탕으로 신호등 3색신호와 좌회전 신호를 검출하였습니다. 



4-1 검출과정은 어떻게 했나요?
처음 입력되는 사진으로부터 주야간 사진을 판별하고 전처리단계를 거쳐 이미지의 준비단계 작업을 마칩니다. 그리고 ROI인 관심영역 부분을 잡아줌으로써 찾고자 하는 신호등의 위치를 선점하였고 검출속도 부분을 상당히 줄일 수 있었습니다. 사진의 크기가 클수록 픽셀에 대한 연산량이 증가하기 때문에 관심영역을 잡아줌으로써 연산량을 최소화 하였습니다. 
이렇게 준비단계 이후 빛의 세기를 판별하기 위해 RGB색상들을 HSV(색상,채도,명도)로 변환하여 특정 Saturation(채도) 부분을 탐지합니다. 
그다음 신호등의 판넬과 신호등의 원모양을 탐지하기 위해 Threshold(임계값)을 설정하여 이잔화 영상을 얻은 다음 Morphology 기법을 통해 해당하는 판넬모양 혹은 원모양을 추출하게 됩니다. 그 후 윤곽선 탐색 Canny 알고리즘을 이용하여 객체마다의 분리를 해준 다음 Roundness를 통해 원형도를 측정하게 됩니다. 원형도에 가까운 물체를 찾고 마지막으로 빛의 산란을 이용한 픽셀의 RGB 분포도를 측정하고 신호등을 검출하게 되는 과정입니다.

ROI를 잡아줌으로써 차량에 대한 불빛을 차단하고 연산량을 최소화합니다.
또한, 탐지거리를 조정하기 위해 너무 멀리 있지 않은 신호등을 검출하게 됩니다.
너무 멀리 있다면 이진화 추출, 윤곽선 검출, 원형도 검출 부분에서 오류를 범할 수 있기 때문에 적정선의 거리가 필요로 합니다. 


4-2 프로젝트를 수행하면서 어려웠던 점은 무엇이었나요?
가장 어려웠던 것은 실생활의 사진이기 때문에 신호등의 빛의 세기가 각각 달라서 색의 범위설정이 어려웠습니다. 또한, 날씨 같은 환경적인 요소도 고려해야 하기 때문에 햇빛의 역광, 비, 흐림 등 장애요소가 많아 검출하는데 많은 어려움이 있었습니다. 

4-3 완성했나?
학교를 졸업해야 되었기 때문에 완성까지는 하지 못하고 프로토타입 시연까지 해보았습니다.

4-4 어떻게 검출시간을 줄였나??
기존의 방식은 전체적인 픽셀을 계산하고 검출과정을 진행하는 방식이었지만
필요한 부분만을 고려하여 관심영역을 잡아주고 탐지하는 거리를 일정 이상치로 잡아줌으로써
검출속도를 개선하였습니다.

4-5 검출 속도가 좀 느리다고 생각하는데 더 줄일 방안은 없나??
일반 사진들의 경우 평균검출속도가 0.1초, 0.2초에 성능을 보일 수 있지만 
날씨의 영향, 즉 비, 구름, 안개등과 같은 장애요소가 있거나 빛의 세기가 약해 신호등 검출하는데 있어 색상범위를 초과하는 부분에서 4초,5초 정도의 많은 시간을 허비했습니다.
어려운점을 극복한다면 검출속도를 훨씬 줄일 수 있다고 생각합니다.

어려운점을 극복하기 위해선 먼저 날씨의 영향을 먼저 파악하는 알고리즘과
전처리 단계를 더욱 강화하여 신호등 사진의 윤곽을 더욱 밝힌다면 해결 할 수 있을 것 같습니다.

